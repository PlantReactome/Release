package org.reactome.core.model;

// Generated Jul 8, 2011 1:48:55 PM by Hibernate Tools 3.4.0.CR1

import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import java.util.Date;
import java.util.List;

/**
 * DatabaseObject generated by hbm2java
 */

@XmlRootElement
public class DatabaseObject implements Comparable, java.io.Serializable {

    private Long dbId;
    private String displayName;
    private Date timestamp;
    private InstanceEdit created;
    private List<InstanceEdit> modified;
    private StableIdentifier stableIdentifier;

    public DatabaseObject() {
    }

    public List<InstanceEdit> getModified() {
        return modified;
    }

    public void setModified(List<InstanceEdit> modified) {
        this.modified = modified;
    }

    public Long getDbId() {
        return this.dbId;
    }

    public void setDbId(Long dbId) {
        this.dbId = dbId;
    }

    public String getAvailableIdentifier(){
        return stableIdentifier!=null?stableIdentifier.getDisplayName().split("\\.")[0]:dbId.toString();
    }

    @XmlElement
    public String getSchemaClass() {
        return getClass().getSimpleName();
    }

    public String getDisplayName() {
        return this.displayName;
    }

    public void setDisplayName(String displayName) {
        this.displayName = displayName;
    }

    public Date getTimestamp() {
        return this.timestamp;
    }

    public void setTimestamp(Date timestamp) {
        this.timestamp = timestamp;
    }

    public InstanceEdit getCreated() {
        return this.created;
    }

    public void setCreated(InstanceEdit created) {
        this.created = created;
    }

    public StableIdentifier getStableIdentifier() {
        return this.stableIdentifier;
    }

    public void setStableIdentifier(StableIdentifier stableIdentifier) {
        this.stableIdentifier = stableIdentifier;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        DatabaseObject that = (DatabaseObject) o;

        if (dbId != null ? !dbId.equals(that.dbId) : that.dbId != null) return false;

        return true;
    }

    @Override
    public int hashCode() {
        return dbId != null ? dbId.hashCode() : 0;
    }

    @Override
    public int compareTo(Object o) {
        return dbId.compareTo(((DatabaseObject) o).getDbId());
    }
}
